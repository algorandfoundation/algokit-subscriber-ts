{
    "name": "TestingApp",
    "structs": {
        "ComplexEvent": [
            {
                "name": "array",
                "type": "uint32[]"
            },
            {
                "name": "int",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "call_abi",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "call_abi_foreign_refs",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_global",
            "args": [
                {
                    "type": "uint64",
                    "name": "int1"
                },
                {
                    "type": "uint64",
                    "name": "int2"
                },
                {
                    "type": "string",
                    "name": "bytes1"
                },
                {
                    "type": "byte[4]",
                    "name": "bytes2"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_local",
            "args": [
                {
                    "type": "uint64",
                    "name": "int1"
                },
                {
                    "type": "uint64",
                    "name": "int2"
                },
                {
                    "type": "string",
                    "name": "bytes1"
                },
                {
                    "type": "byte[4]",
                    "name": "bytes2"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "issue_transfer_to_sender",
            "args": [
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_box",
            "args": [
                {
                    "type": "byte[4]",
                    "name": "name"
                },
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "error",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "emitSwapped",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "uint64",
                            "name": "field1"
                        },
                        {
                            "type": "uint64",
                            "name": "field2"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "emitSwappedTwice",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "uint64",
                            "name": "field1"
                        },
                        {
                            "type": "uint64",
                            "name": "field2"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "emitComplex",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                },
                {
                    "type": "uint32[]",
                    "name": "array"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "uint64",
                            "name": "field1"
                        },
                        {
                            "type": "uint64",
                            "name": "field2"
                        }
                    ]
                },
                {
                    "name": "Complex",
                    "args": [
                        {
                            "type": "(uint32[],uint64)",
                            "name": "field1",
                            "struct": "ComplexEvent"
                        }
                    ]
                }
            ],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 2
            },
            "local": {
                "ints": 2,
                "bytes": 2
            }
        },
        "keys": {
            "global": {
                "value": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dmFsdWU="
                },
                "bytes1": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ynl0ZXMx"
                },
                "bytes2": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ynl0ZXMy"
                },
                "int1": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aW50MQ=="
                },
                "int2": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aW50Mg=="
                }
            },
            "local": {
                "local_bytes1": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bG9jYWxfYnl0ZXMx"
                },
                "local_bytes2": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bG9jYWxfYnl0ZXMy"
                },
                "local_int1": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bG9jYWxfaW50MQ=="
                },
                "local_int2": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bG9jYWxfaW50Mg=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "box": {
                    "keyType": "byte[4]",
                    "valueType": "string",
                    "prefix": ""
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp",
            "OptIn"
        ],
        "call": [
            "DeleteApplication",
            "UpdateApplication"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        174
                    ],
                    "errorMessage": "Deliberate error"
                },
                {
                    "pc": [
                        113,
                        134,
                        152,
                        170,
                        178,
                        196,
                        211,
                        240,
                        269,
                        293
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        324
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        368
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        116,
                        137,
                        155,
                        173,
                        181,
                        199,
                        214,
                        243,
                        272,
                        296,
                        327,
                        351,
                        359
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        758
                    ],
                    "errorMessage": "unauthorized"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAQAKJgMEHMvZJQQVH3x1ADEbQQEyggsEMMbVigTxfoClBK11YCwEpM+N6gTOwoNKBJi+IhkEpLSiMARE0NoNBNQ87l0EEbCXWgStIw0MNhoAjgsA1AC2AJ4AgQBkAFUAQwA7ACkAFwACI0MxGRREMRhENhoBNhoCNhoDiAJAIkMxGRREMRhENhoBNhoCiAIYIkMxGRREMRhENhoBNhoCiAH5IkMxGRREMRhEADEZFEQxGEQ2GgE2GgKIAdIiQzEZFEQxGEQ2GgGIAa4iQzEZFEQxGEQ2GgEXNhoCFzYaA1cCADYaBIgBRSJDMRkURDEYRDYaARc2GgIXNhoDVwIANhoEiAD8IkMxGRREMRhEiABvSRUWVwYCTFApTFCwIkMxGRREMRhENhoBVwIAiABBSRUWVwYCTFApTFCwIkMxGSISRDEYRCJDMRmNBgATABP/Ev8SAAsAA0L/DzEYRIgBlSJDMRhEiAF8IkMxGBREIkOKAQGAB0hlbGxvLCCL/1CJigABNjIBiABBgAVBcHA6IExQgAksIEFzc2V0OiBQNjAAiAAmUIALLCBBY2NvdW50OiBQNhwAI1WIAA9QgAE6UDYcACJViAACUImKAQEqi/9AAAWAATBMiYv/JApJjABBABuLAIj/44v/JBiACjAxMjM0NTY3ODlMIlhQTIkqQv/migQAgARpbnQxi/xngARpbnQyi/1ngAZieXRlczGL/meABmJ5dGVzMov/Z4mKBAAxAIAKbG9jYWxfaW50MYv8ZjEAgApsb2NhbF9pbnQyi/1mMQCADGxvY2FsX2J5dGVzMYv+ZjEAgAxsb2NhbF9ieXRlczKL/2aJigEAsTEAi/8XsgiyByKyECOyAbOJigIAi/68SIv+i/+/iYoCAIv+i/9QKExQsImKAgCL/ov/UChMULCL/4v+UChMULCJigMAi/2L/lAoTFCwgAIACov+UIv/UIACAAJMUIAEe04gfUxQsImKAACIAAGJigAAMQAyCRJEiYoAAIj/8Ik=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [
        {
            "name": "Swapped",
            "args": [
                {
                    "type": "uint64",
                    "name": "field1"
                },
                {
                    "type": "uint64",
                    "name": "field2"
                }
            ]
        },
        {
            "name": "Complex",
            "args": [
                {
                    "type": "(uint32[],uint64)",
                    "name": "field1",
                    "struct": "ComplexEvent"
                }
            ]
        }
    ],
    "templateVariables": {}
}